)
) #using double parser
challenge2 <- read_csv(readr_example("challenge.csv"), guess_max = 1002)
challenge2 <- read_csv(readr_example("challenge.csv"), guess_max = 1000)
challenge2 <- read_csv(readr_example("challenge.csv"), guess_max = 1002)
challenge2
tail(challenge2)
?readr_example
?parser_guess
readr::parser_guess(NA)
parser_guess(NA)
library(readr)
parse_guess(NA)
parse_guess(89.494)
parse_guess("89,459.494")
guess_parser("89,459.494")
challenge2 <- read_csv(readr_example("challenge.csv"),
col_types = cols(.default = col_character()))
challenge2
challenge_df <- as_tibble(challenge2)
challenge_df
type_convert(challenge_df)
?cols
?col_character
?read_csv
type_convert(challenge2)
?read_csv
tail(challenge2)
?read_lines
challenge2 <- read_csv(readr_example("challenge.csv"), guess_max = 1002, n_max = 5)
tail(challenge2)
read_lines("challenge.csv")
challenge_input <- read_lines("challenge.csv") %>%
as_tibble()
challenge_input
read_csv(challenge_input)
challenge_input <- read_lines("challenge.csv")
read_csv(challenge_input)
#Writing to a file
write_csv(challenge, "challenge.csv")
write_rds(challenge, "challenge.rds")
challenge <- readRDS("~/Learning R/r4ds/challenge.rds")
library(feather)
source('~/Learning R/r4ds/chapter11.R', echo=TRUE)
install.packages("feather")
library(feather)
write_feather(challenge, "challenge.feather")
read_feather("challenge.feather")
install.packages("sparklyr")
library(sparklyr)
?spark_apply
# Chapter 12: Tidy Data
library(tidyverse)
table1
table2
table1 %>%
mutate(rate = cases / population * 10000)
table1
table1 %>%
count(year, wt = cases)
# Chapter 12: Tidy Data
library(c(tidyverse, ggplot2))
library(ggplot2)
ggplot(table1, aes(year, cases)) +
geom_line(aes(group = country), color = "grey50")
ggplot(table1, aes(year, cases)) +
geom_line(aes(group = country), color = "grey50") +
geom_point(aes(group = year))
ggplot(table1, aes(year, cases)) +
geom_line(aes(group = country), color = "grey50") +
geom_point(aes(color =country))
table2
#Exercises
#2
#table 2
table2 %>%
count(wt = cases)
#Exercises
#2
#table 2
table2 %>%
filter(type = "case")
#Exercises
#2
#table 2
table2 %>%
filter(type == "case")
#Exercises
#2
#table 2
table2 %>%
filter(type == case)
?filter
#Exercises
#2
#table 2
table2 %>%
filter(, type == case)
#Exercises
#2
#table 2
table2 %>%
filter(, type == "case")
#Exercises
#2
#table 2
table2 %>%
filter(type == "case")
#Exercises
#2
#table 2
table2 %>%
filter(country == "China")
#Exercises
#2
#table 2
table2 %>%
filter(type == "cases")
#Exercises
#2
#table 2
table2 %>%
filter(type == "cases") %>%
select(country, year, count)
table4
#Exercises
#2
#table 2
table2 %>%
filter(type == "cases") %>%
#Exercises
#2
#table 2
table2 %>%
filter(type == "cases")
#Exercises
#2
#table 2
table2 %>%
filter(type == "cases")
table1
#Exercises
#2
#table 2
table2 %>%
filter(type == "cases") %>%
mutate(population = count(year, wt = population))
?group_by
#Exercises
#2
#table 2
table2 %>%
group_by(country)
#Exercises
#2
#table 2
table2 %>%
group_by(country, year)
#Exercises
#2
#table 2
table2 %>%
group_by(country)
?summarize
#Exercises
#2
#table 2
table2 %>%
group_by(country, type) %>%
summarize()
#Exercises
#2
#table 2
table2 %>%
group_by(country, type)
#Exercises
#2
#table 2
table2 %>%
group_by(type, country)
#Exercises
#2
#table 2
table2 %>%
group_by(type)
#Exercises
#2
#table 2
table2 %>%
group_by(type == "cases")[[count]]
#Exercises
#2
#table 2
table2 %>%
group_by(type == "cases")[["count"]]
#Exercises
#2
#table 2
table2_cases <- group_by(table2, type == "cases")[["count"]]
table2_cases
#Exercises
#2
#table 2
table2 %>%
table2_cases <- group_by(type == "cases")[["count"]]
#Exercises
#2
#table 2
table2_cases <- group_by(table2, type == "cases")[["count"]]
tb2_country <- group_by(table2, type == "cases")[["country"]]
tb2_country
#Exercises
#2
#table 2
tb2_cases <- group_by(table2, type == "cases")[["count"]]
tb2_year <- group_by(table2, type == "cases")[["year"]]
tb2_year
tb2_population <- group_by(table2, type = "cases")[["population"]]
tb2_population
tb2_population <- group_by(table2, type = "population")[["count"]]
tb2_population
table2_tidy <- tibble(country = tb2_country,
year = tb2_year,
cases = tb2_cases,
population = tb2_population,
rate = cases/ population * 10000)
table2_tidy
tb2_population <- group_by(table2, type = "population")[["count"]]
table2_tidy <- tibble(country = tb2_country,
year = tb2_year,
cases = tb2_cases,
population = tb2_population,
rate = cases/ population * 10000)
table2_tidy
table2_tidy <- tibble(country = tb2_country,
year = tb2_year,
rate = tb2_cases/ tb2_population * 10000)
table2_tidy
tb2_population
table2_tidy <- tibble(country = tb2_country,
year = tb2_year,
rate = tb2_cases/ tb2_population)
tb2_population
tb2_tidy
table2_tidy
tb2_population <- group_by(table2, type = "population")
tb2_population
table2
tb2_population
tb2_population <- group_by(table2, type == "population")[["count"]]
tb2_population
tb2_population <- group_by(table2, type == "population")[["count"]]
tb2_population <- group_by(table2, type == "population")[["count"]]
tb2_population
tb2_population <- group_by(table2, type == "population")
tb2_population
tb2_cases
#Exercises
#2
#table 2
tb2_cases <- filter(table2, type == "cases")[["count"]]
tb2_country <- filter(table2, type == "cases")[["country"]]
tb2_year <- filter(table2, type == "cases")[["year"]]
filter()tb2_population <- filter(table2, type == "population")
tb2_population <- filter(table2, type == "population")[["count"]]
table2_tidy <- tibble(country = tb2_country,
year = tb2_year,
rate = tb2_cases/ tb2_population)
table2_tidy
table2_tidy <- tibble(country = tb2_country,
year = tb2_year,
rate = tb2_cases/ tb2_population * 10000)
c(table4a, table4b)
table4a
?rep
table4b
#table4
table4_rate <- tibble(country = filter(table4a, type == "country")[["country"]],
"Rate 1999" = table4a[["1999"]] / table4b[["1999"]] * 10000)
#table4
table4_rate <- tibble(country = select(table4a, "country")],
"Rate 1999" = table4a[["1999"]] / table4b[["1999"]] * 10000)
#table4
table4_rate <- tibble(country = select(table4a, "country"),
"Rate 1999" = table4a[["1999"]] / table4b[["1999"]] * 10000)
#table4
table4_rate <- tibble(country = select(table4a, country),
"Rate 1999" = table4a[["1999"]] / table4b[["1999"]] * 10000)
#table4
table4_rate <- tibble(country = table4a[["country"]],
"Rate 1999" = table4a[["1999"]] / table4b[["1999"]] * 10000)
table4_rate
#table4
table4_rate <- tibble(country = table4a[["country"]],
"Rate 1999" = table4a[["1999"]] / table4b[["1999"]] * 10000
"Rate 2000" = table4a[["2000"]] / table4b[["2000"]] * 10000
)
#table4
table4_rate <- tibble(country = table4a[["country"]],
"Rate 1999" = table4a[["1999"]] / table4b[["1999"]] * 10000,
"Rate 2000" = table4a[["2000"]] / table4b[["2000"]] * 10000
)
table4_rate
#Gathering
table4a %>%
gather(key = "year", value = "cases")
#Gathering
table4a %>%
gather('1999', '2000', key = "year", value = "cases")
table4b
table4b %>%
gather('1999', '2000', key = 'year', value = 'population')
left_join(table4a, table4b)
#Gathering
table4a <- table4a %>%
gather('1999', '2000', key = "year", value = "cases")
table4b <-  table4b %>%
gather('1999', '2000', key = 'year', value = 'population')
left_join(table4a, table4b)
table2
spread(table2, key = type, value = count)
#Exercise
stocks <- tibble(
year   = c(2015, 2015, 2016, 2016),
half  = c(   1,    2,     1,    2),
return = c(1.88, 0.59, 0.92, 0.17)
)
stocks
stocks %>%
spread(year, return)
stocks %>%
spread(year, return) %>%
gather("year", "return", "2015", "2016")
?spread
people <- tribble(
~name,             ~key,    ~value,
#-----------------|--------|------
"Phillip Woods",   "age",       45,
"Phillip Woods",   "height",   186,
"Phillip Woods",   "age",       50,
"Jessica Cordero", "age",       37,
"Jessica Cordero", "height",   156
)
people
glimpse(people)
spread(people, age, height, value)
table2
spread(people, key = c("age", "height"), value = "value")
gather(people, key = "key", value = "value")
gather(people, key = ~key, value = ~value)
gather(people, key = key, value = value)
gather(people, name, value, key = key, value = value)
spread(people, value, key)
spread(people, key, value)
spread(people, obs, key, value)
spread(people, key, value)
spread(people, key, value)
people <- tribble(
~name,             ~key,    ~value, ~obs,
#-----------------|--------|------|------
"Phillip Woods",   "age",       45, 1,
"Phillip Woods",   "height",   186, 1,
"Phillip Woods",   "age",       50, 2,
"Jessica Cordero", "age",       37, 1,
"Jessica Cordero", "height",   156, 1
)
spread(people, key, value)
#4
preg <- tribble(
~pregnant, ~male, ~female,
"yes",     NA,    10,
"no",      20,    12
)
gather(preg, female, count)
gather(preg, pregnant, female, count)
gather(preg, pregnant, count)
gather(preg, pregnant, female, count)
gather(preg, sex, female, count)
gather(preg, sex, count, male, female)
gather(preg, sex, count, male, female) %>%
mutate(female = sex == "female",
pregnant = pregnant == "yes")
gather(preg, sex, count, male, female) %>%
mutate(female = sex == "female",
pregnant = pregnant == "yes") %>%
select(-sex)
#Separating and uniting
glimspe(table3
)
#Separating and uniting
glimpse(table3
)
#Separating and uniting
table3
?tidyverse-package
?tidyverse
??json
library(tidyverse)
library(jsonlite)
?jsonlite
json_file <- fromJSON(kenh14data.json)
json_file <- fromJSON("kenh14data.json")
json_file
data_date <- select(json_file, day)
data_date
table3
#Separating and uniting
table3 %>%
separate(rate, into = c("cases", "population"))
json_file %>%
select(list) %>%
separate(list, into = c("box_id", "view_total", "view_scroll",
"user_total", "user_scroll"))
json_file %>%
select(list) %>%
separate(into = c("box_id", "view_total", "view_scroll",
"user_total", "user_scroll"))
ind_list <- json_file %>%
select(list)
ind_list %>% separate(into = c("box_id", "view_total", "view_scroll",
"user_total", "user_scroll"))
ind_list
ind_list %>% select([[1]])
ind_list %>% select(1)
ind_list %>% select("1")
glimpse(ind_list)
ind_list[1]
tibble(ind_list)
glimpse(ind_list)
ind_list[[1]]
for n < 15:
for n < 15
ind_list[[1]]
as.tibble(ind_list)
glimpse(data_date)
as.tibble(json_file)
kenh14_df <- as.tibble(json_file)
kenh14_df %>% select[[1]]
kenh14_df %>% select[1]
kenh14_df %>% select([[1]])
kenh14_df %>% select(1)
kenh14_df %>% select(2)
kenh14_df %>% select(3)
kenh14_df <- as.tibble(json_file) %>%
select(-size)
kenh14_df
kenh14_df %>% select(day == "2018-04-17")
kenh14_df %>% select("day" == "2018-04-17")
kenh14_df %>% filter("day" == "2018-04-17")
kenh14_df %>% select(list)
kenh14_df %>%
separate(list, into = c("box_id", "view_total",
"view_scroll", "user_total", "user_scroll"))
kenh14_df %>%
filter(date == "2018-04-17")
kenh14_df %>%
filter(date == "2018-04-17")
kenh14_df
kenh14_df %>%
filter(day == "2018-04-17")
kenh14_df %>%
filter(day == "2018-04-17") %>%
select(list)
test_list <- kenh14_df %>%
filter(day == "2018-04-17") %>%
select(list)
test_list
test_df <- kenh14_df %>%
filter(day == "2018-04-17") %>%
select(list)
test_list
test_df
View(test_df)
as.tibble(test_df)
test_df([[1]])
test_df[[1]]
as_tibble(test_df[[1]])
as.tibble(test_df[[1]])
?as_tibble
test_df[[2]]
test_df[[1]]
test_df
as.tibble(test_df[[1]], rownames(c("box_id", "view_total", "view_scroll", "user_total", "user_scroll")))
as.tibble(test_df[[1]], rownames(c("box_id", "view_total", "view_scroll", "user_total", "user_scroll")))
as.tibble(test_df[[1]])
as.tibble(test_df[[1]], rownames(c("chiu", "box_id", "view_total", "view_scroll", "user_total", "user_scroll")))
?purrr
library(rjson)
?plyr
transform(stack(json_file))
?transform
?stack
lst = fromJSON("test.json")
lst <-  fromJSON("test.json")
lst <- fromJSON("test.json")
lst <- fromJSON("test.json")
lst <- fromJSON("test.json")
lst <- fromJSON("test.json")
lst <- fromJSON("test.json")
?fromJSON
lst <- fromJSON('test.json')
lst <- fromJSON('ktest.json')
library(tidyverse)
library(jsonlite)
lst <- fromJSON('ktest.json')
lst <- fromJSON('fuckthis.json')
lst <- fromJSON("fuckthis.json")
lst <- fromJSON("fuckthis.json")
source('~/Learning R/r4ds/kenh14rs.R', echo=TRUE)
source('~/Learning R/r4ds/kenh14rs.R', echo=TRUE)
source('~/Learning R/r4ds/kenh14rs.R', echo=TRUE)
source('~/Learning R/r4ds/kenh14rs.R', echo=TRUE)
